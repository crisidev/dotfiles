#!/usr/bin/env bash

#MONITORS=$(yabai -m query --displays | jq '.[].index')
#
#debug() {
#    echo "$@" 1>&2
#}
#
#delete_all_spaces() {
#    for monitor in ${MONITORS[@]}; do
#        local FOCUS_SPACE=$(yabai -m query --spaces --display $monitor | jq '.[0].index')
#        debug "Focusing space $FOCUS_SPACE"
#        yabai -m space --focus "$FOCUS_SPACE"
#        while [ $(yabai -m query --spaces --display $monitor | jq '. | length') -ne 1 ]; do
#            local SPACE_ID=$(yabai -m query --spaces --display $monitor | jq '.[-1].index')
#            debug "Deleting space $SPACE_ID"
#            yabai -m space --destroy "$SPACE_ID"
#        done
#    done
#}
#
#name_first_space() {
#    local SPACE_ID=$(get_first_space_of_monitor $1)
#    debug "Name space ($SPACE_ID): $2"
#    yabai -m space "$SPACE_ID" --label "$2"
#}
#
#name_space() {
#    local SPACE_ID=$(yabai -m query --spaces --display $1 | jq '[.[] | select (.label=="")] | .[0] | .index')
#    debug "Name space ($SPACE_ID): $2"
#    yabai -m space "$SPACE_ID" --label "$2"
#}
#
#get_first_space_of_monitor() {
#    yabai -m query --spaces --display $1 | jq '.[0].index'
#}
#
#create_space_on_monitor() {
#    local FIRST_SPACE=$(get_first_space_of_monitor $1)
#    debug "Create space after $FIRST_SPACE"
#    yabai -m space --create $FIRST_SPACE
#    name_space $1 "$2"
#}
#
#NB_MONITORS="$(yabai -m query --displays | jq '. | length')"
#CENTRAL_MONITOR=1
#LAPTOP_MONITOR=2
#
#LAPTOP_MONITOR=$(yabai -m query --displays | jq '.[] | select(.uuid|test("37D8832A-2D66-02CA-B9F7-8F30A301B230"))| .index')
#if [ "$NB_MONITORS" = "2" ]; then
#    CENTRAL_MONITOR=$(yabai -m query --displays | jq '.[] | select(.uuid|test("37D8832A.")|not) | .index')
#fi
#
#sudo yabai --load-sa
#yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# global settings
yabai -m config external_bar all:24:0
yabai -m config mouse_follows_focus on
yabai -m config focus_follows_mouse autoraise
yabai -m config window_placement first_child
yabai -m config window_topmost on
yabai -m config window_opacity on
yabai -m config window_opacity_duration 0.0
yabai -m config window_shadow on
yabai -m config insert_feedback_color 0xaad75f5f
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.95
yabai -m config split_ratio 0.50
yabai -m config auto_balance off
yabai -m config mouse_modifier cmd
yabai -m config mouse_action1 move
yabai -m config mouse_action2 resize

# general space settings
yabai -m config layout bsp
yabai -m config top_padding 0
yabai -m config bottom_padding 8
yabai -m config left_padding 8
yabai -m config right_padding 8
yabai -m config window_gap 8

# rename spaces
yabai -m space 1 --label terminal
yabai -m space 2 --label firefox
yabai -m space 3 --label outlook
yabai -m space 4 --label spotify
yabai -m space 5 --label teams
yabai -m space 6 --label whatsapp
yabai -m space 7 --label telegram
yabai -m space 8 --label signal
yabai -m space 9 --label videoconf

# spaces
#delete_all_spaces
#if [ "$NB_MONITORS" = "2" ]; then
#    name_first_space "$CENTRAL_MONITOR" "terminal"
#    create_space_on_monitor "$CENTRAL_MONITOR" "firefox"
#    create_space_on_monitor "$CENTRAL_MONITOR" "outlook"
#    create_space_on_monitor "$CENTRAL_MONITOR" "spotify"
#    name_first_space "$LAPTOP_MONITOR" "teams"
#    create_space_on_monitor "$LAPTOP_MONITOR" "whatsapp"
#    create_space_on_monitor "$LAPTOP_MONITOR" "telegram"
#    create_space_on_monitor "$LAPTOP_MONITOR" "signal"
## -----------------------------------------------------------
#else
#    name_first_space "$LAPTOP_MONITOR" "terminal"
#    create_space_on_monitor "$LAPTOP_MONITOR" "firefox"
#    create_space_on_monitor "$LAPTOP_MONITOR" "outlook"
#    create_space_on_monitor "$LAPTOP_MONITOR" "spotify"
#    create_space_on_monitor "$LAPTOP_MONITOR" "teams"
#    create_space_on_monitor "$LAPTOP_MONITOR" "whatsapp"
#    create_space_on_monitor "$LAPTOP_MONITOR" "telegram"
#    create_space_on_monitor "$LAPTOP_MONITOR" "signal"
#fi

# application for desktop
yabai -m rule --add app="^Firefox$" space=2 sticky=off
yabai -m rule --add app="^Microsoft Outlook$" space=3
yabai -m rule --add app="^Microsoft Outlook$" title="^Calendar$" space=3
yabai -m rule --add app="^Spotify$" space=4
yabai -m rule --add app="^Microsoft Teams (work or school)$" space=5
yabai -m rule --add app="^WhatsApp$" space=6
yabai -m rule --add app="^Telegram$" space=7
yabai -m rule --add app="^Signal$" space=8

# rules
yabai -m rule --add title="^float-term$" manage=off sticky=off
yabai -m rule --add app="^Microsoft Outlook$" title="^Outlook Settings$" manage=off
yabai -m rule --add app="^Microsoft Outlook$" title="^Rules$" manage=off
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Finder$" manage=off
yabai -m rule --add app="^Bitwarden$" manage=off
yabai -m rule --add app="^1Password$" manage=off
yabai -m rule --add app="^Preview$" manage=off
yabai -m rule --add app="^App Store$" manage=off
yabai -m rule --add app="^Font Book$" manage=off
yabai -m rule --add app="^Alfred$" manage=off
yabai -m rule --add app="^The Unarchiver$" manage=off
yabai -m rule --add app="^iBar$" manage=off
yabai -m rule --add app="^Alfred Preferences$" manage=off
yabai -m rule --add app="^Archive Utility$" manage=off
yabai -m rule --add app="^Hidden Bar$" manage=off
yabai -m rule --add app="^Bartender 5$" manage=off
yabai -m rule --add app="^Installer$" manage=off
yabai -m rule --add app="^iStat Menus$" manage=off sticky=off
yabai -m rule --add app="^Activity Monitor$" manage=off
yabai -m rule --add app="^Microsoft Outlook$" title="^Outlook Settings$" manage=off
yabai -m rule --add app="^Digital Colou?r Meter$" sticky=on

# signals
## updates workspace widget when space changes
yabai -m signal --add event=space_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-index-jsx\"'"
yabai -m signal --add event=window_created action='
  yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"can-resize\" or .\"is-floating\"" || \
  yabai -m window $YABAI_WINDOW_ID --toggle float && \
  yabai -m window $YABAI_WINDOW_ID --layer above && \
  yabai -m window $YABAI_WINDOW_ID --grid 4:4:1:1:2:2
'

echo "yabai configuration loaded.."
