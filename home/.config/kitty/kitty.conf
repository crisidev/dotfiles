# shell
shell /bin/zsh

# vim:fileencoding=utf-8:ft=conf
font_family                             MonoLisa Nerd Font Light
bold_font                               MonoLisa Nerd Font SemiBold
italic_font                             MonoLisa Nerd Font Light Italic
bold_italic_font                        MonoLisa Nerd Font SemiBold Italic

adjust_line_height 0
# Font size (in pts)
font_size        11
disable_ligatures never
symbol_map U+e000-U+e00a,U+ea60-U+ebeb,U+e0a0-U+e0c8,U+e0ca,U+e0cc-U+e0d7,U+e200-U+e2a9,U+e300-U+e3e3,U+e5fa-U+e6b1,U+e700-U+e7c5,U+ed00-U+efc1,U+f000-U+f2ff,U+f000-U+f2e0,U+f300-U+f372,U+f400-U+f533,U+f0001-U+f1af0 Symbols Nerd Font Mono

hide_window_decorations no
linux_display_server x11
resize_debounce_time 0.001

# The cursor shape can be one of (block, beam, underline)
cursor_shape     block

# The interval (in seconds) at which to blink the cursor. Set to zero to
# disable blinking.
cursor_blink_interval     0.5

# Stop blinking cursor after the specified number of seconds of keyboard inactivity. Set to
# zero or a negative number to never stop blinking.
cursor_stop_blinking_after 15.0

# Number of lines of history to keep in memory for scrolling back
scrollback_lines 20000
scrollback_pager_history_size 100

# Program with which to view scrollback in a new window. The scrollback buffer is passed as
# STDIN to this program. If you change it, make sure the program you use can
# handle ANSI escape sequences for colors and text formatting.
scrollback_pager less +G -R

# Wheel scroll multiplier (modify the amount scrolled by the mouse wheel)
# wheel_scroll_multiplier 5.0
touch_scroll_multiplier 50.0

# The interval between successive clicks to detect double/triple clicks (in seconds)
click_interval 0.5

# transparency
background_opacity         0.95
dynamic_background_opacity yes

# Characters considered part of a word when double clicking. In addition to these characters
# any character that is marked as an alpha-numeric character in the unicode
# database will be matched.
select_by_word_characters :@-./_~?&=%+#

# Hide mouse cursor after the specified number of seconds of the mouse not being used. Set to
# zero or a negative number to disable mouse cursor hiding.
mouse_hide_wait 3.0

# The enabled window layouts. A comma separated list of layout names. The special value * means
# all layouts. The first listed layout will be used as the startup layout.
# For a list of available layouts, see the file layouts.py
enabled_layouts *

# If enabled, the window size will be remembered so that new instances of kitty will have the same
# size as the previous instance. If disabled, the window will initially have size configured
# by initial_window_width/height, in pixels.
remember_window_size   no
initial_window_width   640
initial_window_height  400

# Delay (in milliseconds) between screen updates. Decreasing it, increases fps
# at the cost of more CPU usage. The default value yields ~100fps which is more
# that sufficient for most uses.
# repaint_delay    10
repaint_delay    10

# Delay (in milliseconds) before input from the program running in the terminal
# is processed. Note that decreasing it will increase responsiveness, but also
# increase CPU usage and might cause flicker in full screen programs that
# redraw the entire screen on each loop, because kitty is so fast that partial
# screen updates will be drawn.
input_delay 3

# Visual bell duration. Flash the screen when a bell occurs for the specified number of
# seconds. Set to zero to disable.
visual_bell_duration 0
window_alert_on_bell no

# Enable/disable the audio bell. Useful in environments that require silence.
enable_audio_bell no

# The program with which to open URLs that are clicked on. The special value "default" means to
# use the operating system's default URL handler.
open_url_with default

# The value of the TERM environment variable to set
term xterm-256color

# The width (in pts) of window borders. Will be rounded to the nearest number of pixels based on screen resolution.
window_border_width 0

# window_margin_width 15
tab_bar_edge top

# Key mapping
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.
#
# Clipboard
map ctrl+super+v        paste_from_clipboard
map super+/             paste_from_selection
map ctrl+super+c        copy_to_clipboard
map ctrl+c              copy_or_interrupt

# Search
map ctrl+super+f        show_scrollback

# Scrolling
map shift+up            scroll_line_up
map shift+down          scroll_line_down
map shift+page_up       scroll_page_up
map shift+page_down     scroll_page_down

# Tab management
map ctrl+right          next_tab
map ctrl+left           previous_tab
map ctrl+super+right    move_tab_forward
map ctrl+super+left     move_tab_backward
map ctrl+t              launch --cwd=~ --type=tab
map ctrl+super+w        close_tab

# Miscellaneous
map ctrl+super+=         increase_font_size
map ctrl+super+-         decrease_font_size
map ctrl+super+backspace restore_font_size
map ctrl+super+n         launch --type=background --cwd=current sh -c "nautilus $(pwd)"

# Unmap
map ctrl+shift+n         no_op

# Unicode
map alt+shift+u          kitten unicode_input

# Mouse mapping
# Click on URLs
mouse_map ctrl+left release grabbed,ungrabbed mouse_click_url
mouse_map ctrl+super+left press ungrabbed mouse_selection rectangle
copy_on_select yes

# Symbol mapping (special font for specified unicode code points). Map the
# specified unicode codepoints to a particular font. Useful if you need special
# rendering for some symbols, such as for Powerline. Avoids the need for
# patched fonts. Each unicode code point is specified in the form U+<code point
# in hexadecimal>. You can specify multiple code points, separated by commas
# and ranges separated by hyphens. symbol_map itself can be specified multiple times.
# Syntax is:
#
# symbol_map codepoints Font Family Name
#
# For example:
#
#symbol_map U+E0A0-U+E0A2,U+E0B0-U+E0B3 PowerlineSymbols
#macos_hide_titlebar yes
#macos_option_as_alt no

# Change the color of the kitty window's titlebar on macOS. A value of "system"
# means to use the default system color, a value of "background" means to use
# the default background color and finally you can use an arbitrary color, such
# as #12af59 or "red".
#macos_titlebar_color background

allow_remote_control yes

tab_bar_style powerline
tab_powerline_style round
tab_activity_symbol ï‘„
tab_title_max_length 25
tab_title_template "{fmt.fg.red}{bell_symbol}{fmt.fg.tab} {index}: {title} {activity_symbol}"

include ./crisidev.conf
